\documentclass[../main.tex]{subfiles}

\begin{document}
\chapter{language}

\todo : add some structure

\begin{enumerate}[nolistsep]
    \item Statically typed vs Dynamically typed == Compile time vs Run time type inferrence.
    \item Compiled vs Interpreted == Transforming code to target machine code before running vs No transformation before running. Compiled might be faster because
        \begin{enumerate}[nolistsep]
            \item It is not reading the code and transforming it for every line.
            \item It can do global optimizations which might not be possible in interpreted as its field of view is local.
        \end{enumerate}
    \item Statically vs Dynamically typedness is property of language. Compilation vs Interpration is the property of implementation not language; saying python is an interpreted language is wrong. Any language can be compiled. Any language can be interpreted.
    \item Define, map and visualize the terms: Memory safety, Memory containment and Type safety.
\end{enumerate}


\end{document}
