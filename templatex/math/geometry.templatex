\documentclass[../main.tex]{subfiles}

\begin{document}
\chapter{geometry}

${ add_statement(

'Geometric Point',

r'''
A geometric point is a position. Any geometric point does not change with time (or any quantity), so there is no notion of moving a point.
''',

r'''
A basic but weirdly `not an immediately easy to describe' tool, because `position' seems to be an axiom here.
The position is defined not to change just so that it can act as a reference for any changes that occur in other quantities.
''',

r'''
\proofbydefinition
'''

) }

${ add_statement(

'Geometric Space',

r'''
A geometric space is a @set@ of @geometric point@s.
''',

r'''
That's it! No more restriction on the definition.
As position does not change (with any quantity), geometric space does not change with any quantity.
''',

r'''
\proofbydefinition
'''

) }
${ add_statement(

'Position Vector',

r'''
A position vector is a @vector@ that represents a @geometric point@.
''',

r'''
Although the point never changes, the representation of the point can change.
''',

r'''
\proofbydefinition
'''

) }

${ add_statement(

'Coordinate System',

r'''
A coordinate system $ \Lambda $ is an @injection@ mapping from @geometric space@ G to a @set@ of N-dimensional @position vector@s V. Denoted by $ \Lambda: G \to V $.

$\forall g \in G \Lambda(g) $ (i.e. the image of @geometric point@ g under coordinate system $ \Lambda $) is denoted by $P^{\Lambda}_{g}$.
''',

r'''
Sets up a representation for every point in space such that any point's representation (position vector) is different from all others.
Defining it like this removes all invisible evil chains that are tied to definition otherwise, thus providing a clean and elegant description.
Here we make a connection from geometric points and spaces to vectors.
Here we talk about dimensionality, but still it is the property of vectors not the geometric space itself.
In general there is no restriction on mapping any space to set of any dimensional vectors.
{\color{blue} The association of a real world with a coordinate system of 3-dimensional vector co-domain seems very natural but it might be an arbitrary choice, I have to think about this more}.
''',

r'''
\proofbydefinition
'''

) }

${ add_statement(

'Straight Coordinate Space',

r'''
A straight coordinate space of a @coordinate system@ $\Lambda$ acting on @geometric space@ G is a @subset@ of G, say S such that the @position vector@ of any @geometric point@ in S $ \equiv $ at least one @linear combination@ of position vectors of any two geometric points in S.
''',

r'''
If the geometric space is finite, it is called a line segement otherwise a line.
We can see the importance of the operation of linear combination here, as it is the defining operation for lines and line segments.
Generally denoted by drawing straight lines on paper.
''',

r'''
\proofbydefinition
'''

) }

${ add_statement(

'Coordinate Axis',

r'''
A coordinate axis of a @coordinate system@ $ \Lambda $ acting on a @geometric space@ G is a @subset@ of G, say A such that the @position vector@ of any @geometric point@ in A $ \equiv $ a scaled version of an @axis vector@ B @vector scaling@.
''',

r'''
A coordinate axis is a simple way to disassemble a coordinate system.
For a coordinate system with co-domain as N-dimensional vectors, there are N coordinate axes.
Due to the virtue of position vectors on coordinate axis being scaled axis vectors, any linear combination of two vectors on a coordinate axis lies on the same coordinate axis.
It has no connection with other coordinate axes.
This is a good thing because it makes things simple and non-clumsy.
''',

r'''
\proofbydefinition
'''

) }

${ add_statement(

'Geometric distance',

r'''
''',

r'''

''',

r'''
\proofbydefinition
'''

) }

${ add_statement(

'Basis',

r'''

''',

r'''

''',

r'''
\proofbydefinition
'''

) }

${ add_statement(

'Span',

r'''

''',

r'''

''',

r'''
\proofbydefinition
'''

) }

\end{document}
